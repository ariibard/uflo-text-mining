---
format:
  revealjs:
    echo: true
    theme: custom.scss
embed-resources: true
---

# Expresiones regulares 

## Clase NÂ° 2

### Expresiones regulares (`regex`)

::: r-stack
Son patrones utilizados para encontrar coincidencias dentro de ðŸ“‘
:::

## Â¿QuÃ© es una expresiÃ³n regular? 

```{r echo = TRUE}
library(stringr)
library(quartomonothemer)
#style_mono_quarto(path_scss = "custom.scss")
texto <- "Hola mundo, hola universo"
patron <- "mundo"

# Detecta si el patrÃ³n estÃ¡ presente en el texto
str_detect(texto, patron)

# Extrae la coincidencia
str_extract_all(texto, patron)
```

## Â¿QuÃ© es una expresiÃ³n regular?

Para que sea insensible a las mayusculas y minusculas

```{r echo = TRUE}
# Extrae la coincidencia
str_extract_all(texto, regex(patron, ignore_case = TRUE))
```

## Â¿Para quÃ© se utilizan? 

::: incremental
-   BÃºsqueda avanzada en texto libre

-   ValidaciÃ³n de formularios

-   ExtracciÃ³n de datos de grandes volÃºmenes de texto.

-   SustituciÃ³n de patrones en textos masivos.
:::

## LibrerÃ­a a utilizar 

::::: columns
::: {.column width="30%"}
![](imagenes/1_string.png){fig-align="center"}
:::

::: {.column width="70%"}
<br> El paquete `stringr` proporciona un conjunto de funciones diseÃ±adas para que trabajar con cadenas de texto
:::
:::::

## Funciones
